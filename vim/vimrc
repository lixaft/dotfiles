" Settings file used by Vim.
"
" Description:
"
"   The vimrc file contains a series of instructions that will be
"   automatically executed to initialize Vim when the editor is opened.
"
"   This allow an user to customize the editor as he want including interface,
"   colors, hokeys...
"
" Location:
"
"   ~/.vimrc
"

" Set utf-8 as standard encoding and en_US as the standard language.
set encoding=utf-8

filetype plugin on  " Enable loading of plugin type.
filetype indent on  " Enable loading of indent type.

" ================= General =================

set history=500   " Increase the size of the undo queue.
set noerrorbells  " Turn off the ring bells for error messages.
set novisualbell  " Turn off the use of visual bell instead of beep.
set belloff=all   " Completly turn off the bell.

" Turn off swap files.
set nobackup
set noswapfile

" Access the system clipboard.
set clipboard=unnamed
if has ("unnamedplus")
    set clipboard+=unnamedplus
endif

" ================ Interface ================

set title   " Add the current file to the terminal title.
set number  " Display the line number.
set ruler   " Always show the cursor.

" Turn on syntax highlighting.
syntax on

" Display a vertical bar at the 79 column.
set colorcolumn=79

" Always show the status line.
set laststatus=2

" Define cursor shape.
if &term =~? 'rxvt' || &term =~? 'xterm' || &term =~? 'st-'
    let &t_SI .= "\<Esc>[6 q"
    let &t_RI .= "\<Esc>[2 q"
    let &t_EI .= "\<Esc>[2 q"
endif

" Add a highlight for trailing white spaces.
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/

" ================= Editor =================

set nowrap       " Disable the wrap line.
set linebreak    " Wrap lines at convenient points.

set expandtab    " Replace tab by spaces.
set shiftwidth=4 " The length of a tab.
set tabstop=4    " Make a tab visually look like 4 spaces.
set autoindent   " Copy the indent from current line when starting a new one.
set smarttab     " Go to the next indent level.
set smartindent  " Try to be smart on where an indent should be inserted :)

" ================= Search =================

set ignorecase  " Ignore case when searching.
set smartcase   " When searching try to be smart about cases
set hlsearch    " Highlight search results.
set incsearch   " Make search act like search in modern browsers.

" =============== Completion ===============

set wildmenu                    " Turn on wildmenu.
set wildmode=list:longest       " List all match and complete till the longest.
set wildignore=
set wildignore+=*.pyc           " Python2 bytes-compiled files.
set wildignore+=__pycache__/**  " Python3 bytes-compiled files.
set wildignore+=.DS_Store       " File generated by MacOS.

" ================== Folds ==================

set foldmethod=indent  " Fold based on indent.
set foldnestmax=3      " Deepest fold is 3 levels.
set nofoldenable       " Dont fold by default.

" ================= Mapping =================

" Define leader keys.
let mapleader=","
let maplocalleader="-"

" Quickly edit and source .vimrc file.
nnoremap <leader>ev :split $MYVIMRC<cr>
nnoremap <leader>sv :source $MYVIMRC<cr>

" Easy access to normal mode.
inoremap jk <esc>

" Move line up and down.
nnoremap <c-j> :move .+1<cr>==
nnoremap <c-k> :move .-2<cr>==
vnoremap <c-j> :move '>+1<cr>gv=gv
vnoremap <c-k> :move '<-2<cr>gv=gv

" Move to the first/last character of the line.
nnoremap L $
nnoremap H ^
vnoremap L $
vnoremap H ^

" Quote selection.
vnoremap <leader>' di'<esc>pa'<esc>
vnoremap <leader>" di"<esc>pa"<esc>

" Split line.
nnoremap K i<cr><esc>k==$

" Natural Indent.
nnoremap <tab> >>
nnoremap <s-tab> <<
vnoremap <tab> >gv
vnoremap <s-tab> <gv

" ================= Command =================
